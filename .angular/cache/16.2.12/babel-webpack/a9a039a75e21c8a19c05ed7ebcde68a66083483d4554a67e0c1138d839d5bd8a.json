{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RegisterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nexport class RegisterComponent {\n  constructor() {\n    this.registerForm = new FormGroup({\n      name: new FormControl(\"Ahmed\", [Validators.required, Validators.maxLength(15), Validators.minLength(3)]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.pattern(/^[A-Z][a-z0-9]{3,8}$/)]),\n      rePassword: new FormControl(null, [Validators.required, Validators.pattern(/^[A-Z][a-z0-9]{3,8}$/)]),\n      phone: new FormControl(null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)])\n    });\n  }\n  register(x) {\n    console.log(x);\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 28,\n    vars: 2,\n    consts: [[1, \"container\", \"py-5\"], [1, \"w-75\", \"mx-auto\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"fullName\"], [\"type\", \"text\", \"id\", \"fullName\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"alert alert-danger mb-3\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"pass\"], [\"type\", \"password\", \"id\", \"pass\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"rePassword\"], [\"type\", \"password\", \"id\", \"rePassword\", \"formControlName\", \"rePassword\", 1, \"form-control\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phone\", 1, \"form-control\"], [1, \"btn\", \"bg-main\", \"text-white\", \"d-block\", \"ms-auto\"], [1, \"alert\", \"alert-danger\", \"mb-3\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Register Now :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.register(ctx.registerForm);\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Full Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, RegisterComponent_div_9_Template, 1, 0, \"div\", 6);\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 11);\n        i0.ɵɵtext(20, \"RePassword\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 15);\n        i0.ɵɵtext(27, \"Register\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_1_0.e);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelement","RegisterComponent","constructor","registerForm","name","required","maxLength","minLength","email","password","pattern","rePassword","phone","register","x","console","log","_","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_4_listener","ɵɵtemplate","RegisterComponent_div_9_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","e"],"sources":["C:\\Users\\ME\\Documents\\angular\\e--commerce\\src\\app\\pages\\register\\register.component.ts","C:\\Users\\ME\\Documents\\angular\\e--commerce\\src\\app\\pages\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  registerForm:FormGroup =new FormGroup({\n\nname:new FormControl( \"Ahmed\",\n[\n  Validators.required,\n  Validators.maxLength(15),\n  Validators.minLength(3)\n]),\nemail:new FormControl(null,\n  [\n Validators.required,\n Validators.email\n\n  ]\n),\npassword:new FormControl(null,\n  [\n    Validators.required,\n    Validators.pattern(/^[A-Z][a-z0-9]{3,8}$/)\n  ]\n),\nrePassword:new FormControl(null,\n  [\n    Validators.required,\n    Validators.pattern(/^[A-Z][a-z0-9]{3,8}$/)\n  ]\n),\nphone:new FormControl( null,\n  [\n    Validators.required,\n    Validators.pattern(/^01[0125][0-9]{8}$/)\n  ]\n),\n\n\n\n  })\n\n\n\n  register(x:FormGroup){\n\nconsole.log(x);\n\n  }\n}\n","<div class=\"container  py-5\">\n\n   <div class=\"w-75 mx-auto\">\n    <h1>Register Now :</h1>\n    <form  [formGroup]=\"registerForm\" (ngSubmit)=\"register(registerForm)\" >\n    <div class=\"form-group mb-3\">\n        <label for=\"fullName\">Full Name</label>\n        <input type=\"text\" id=\"fullName\" class=\"form-control\" formControlName=\"name\">\n    </div>\n    <div class=\"alert alert-danger mb-3\" *ngIf=\"registerForm.get('email')?.e\">\n\n    </div>\n    \n    <div class=\"form-group mb-3\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\">\n    </div>\n    \n    \n    <div class=\"form-group mb-3\">\n        <label for=\"pass\">Password</label>\n        <input type=\"password\" id=\"pass\" class=\"form-control\" formControlName=\"password\">\n    </div>\n\n    <div class=\"form-group mb-3\">\n        <label for=\"rePassword\">RePassword</label>\n        <input type=\"password\" id=\"rePassword\" class=\"form-control\" formControlName=\"rePassword\">\n    </div>\n    \n    <div class=\"form-group mb-3\">\n        <label for=\"phone\">Phone</label>\n        <input type=\"tel\" id=\"phone\" class=\"form-control\" formControlName=\"phone\">\n    </div>\n\n\n\n\n  <button class=\"btn bg-main text-white d-block ms-auto\">Register</button>\n\n    </form>\n    \n    \n    \n   </div>\n    \n    \n    \n    \n    \n    \n    \n    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}